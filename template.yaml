AWSTemplateFormatVersion: '2010-09-09'
Description: The AWS CloudFormation template for this Serverless application
Resources:
  # ServerlessDeploymentBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketEncryption:
  #       ServerSideEncryptionConfiguration:
  #         - ServerSideEncryptionByDefault:
  #             SSEAlgorithm: AES256
  # ServerlessDeploymentBucketPolicy:
    # Type: AWS::S3::BucketPolicy
    # Properties:
    #   Bucket: !Ref 'ServerlessDeploymentBucket'
    #   PolicyDocument:
    #     Statement:
    #       - Action: s3:*
    #         Effect: Deny
    #         Principal: '*'
    #         Resource:
    #           - !Join
    #             - ''
    #             - - 'arn:'
    #               - !Ref 'AWS::Partition'
    #               - ':s3:::'
    #               - !Ref 'ServerlessDeploymentBucket'
    #               - /*
    #           - !Join
    #             - ''
    #             - - 'arn:'
    #               - !Ref 'AWS::Partition'
    #               - ':s3:::'
    #               - !Ref 'ServerlessDeploymentBucket'
    #         Condition:
    #           Bool:
    #             aws:SecureTransport: false
  AppLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/node-runtime-serve-static-dev-app
  IamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Join
            - '-'
            - - node-runtime-serve-static
              - dev
              - lambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:TagResource
                Resource:
                  - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/node-runtime-serve-static-dev*:*'
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/node-runtime-serve-static-dev*:*:*'
      Path: /
      RoleName: !Join
        - '-'
        - - node-runtime-serve-static
          - dev
          - !Ref 'AWS::Region'
          - lambdaRole
  AppLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      # Code:
      #   S3Bucket: !Ref 'ServerlessDeploymentBucket'
      #   S3Key: serverless/node-runtime-serve-static/dev/1684902069179-2023-05-24T04:21:09.179Z/node-runtime-serve-static.zip
      Handler: index.handler
      Runtime: nodejs18.x
      FunctionName: node-runtime-serve-static-dev-app
      MemorySize: 1024
      Timeout: 6
      Role: !GetAtt 'IamRoleLambdaExecution.Arn'
    DependsOn:
      - AppLogGroup
  # AppLambdaVersion525eBVkEtu3OjHLlqSQKNPl8GF2OGi0zT3446rtvCs:
  #   Type: AWS::Lambda::Version
  #   DeletionPolicy: Retain
  #   Properties:
  #     FunctionName: !Ref 'AppLambdaFunction'
  #     CodeSha256: M6I+TR6X+I/i1aXw//coUDJ8bIGApWXaWj5Tea4aHe8=
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: dev-node-runtime-serve-static
      EndpointConfiguration:
        Types:
          - EDGE
      Policy: ''
  ApiGatewayMethodGet:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      RequestParameters: {}
      ResourceId: !GetAtt 'ApiGatewayRestApi.RootResourceId'
      RestApiId: !Ref 'ApiGatewayRestApi'
      ApiKeyRequired: false
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Join
          - ''
          - - 'arn:'
            - !Ref 'AWS::Partition'
            - ':apigateway:'
            - !Ref 'AWS::Region'
            - :lambda:path/2015-03-31/functions/
            - !GetAtt 'AppLambdaFunction.Arn'
            - /invocations
      MethodResponses: []
    DependsOn:
      - AppLambdaPermissionApiGateway
  ApiGatewayDeployment1684902049434:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref 'ApiGatewayRestApi'
      StageName: dev
    DependsOn:
      - ApiGatewayMethodGet
  AppLambdaPermissionApiGateway:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt 'AppLambdaFunction.Arn'
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':execute-api:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref 'AWS::AccountId'
          - ':'
          - !Ref 'ApiGatewayRestApi'
          - /*/*
Outputs:
  # ServerlessDeploymentBucketName:
  #   Value: !Ref 'ServerlessDeploymentBucket'
  #   Export:
  #     Name: sls-node-runtime-serve-static-dev-ServerlessDeploymentBucketName
  # AppLambdaFunctionQualifiedArn:
  #   Description: Current Lambda function version
  #   Value: !Ref 'AppLambdaVersion525eBVkEtu3OjHLlqSQKNPl8GF2OGi0zT3446rtvCs'
  #   Export:
  #     Name: sls-node-runtime-serve-static-dev-AppLambdaFunctionQualifiedArn
  ServiceEndpoint:
    Description: URL of the service endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref 'ApiGatewayRestApi'
        - .execute-api.
        - !Ref 'AWS::Region'
        - .
        - !Ref 'AWS::URLSuffix'
        - /dev
    Export:
      Name: sls-node-runtime-serve-static-dev-ServiceEndpoint
